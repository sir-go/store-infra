---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: {{ .Chart.Name }}
    app.kubernetes.io/part-of: {{ .Values.global.project }}
    env: "{{ .Values.global.environment }}"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: {{ .Values.global.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      name: {{ .Chart.Name }}
      labels:
        app: {{ .Chart.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  {{- range $m := .Values.nodeMathes }}
                  - key: {{ $m.key }}
                    operator: {{ $m.operator }}
                    values:
                      {{- range $v := $m.values }}
                      - {{ $v }}
                      {{- end}}
                  {{- end}}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.image.repo }}{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          volumeMounts:
            - name: {{ .Values.service.nginx.configMapName }}
              mountPath: {{ .Values.service.nginx.confPath }}/{{ .Values.service.nginx.confFileName }}
              subPath: {{ .Values.service.nginx.confFileName }}
              readOnly: true
          livenessProbe: {{ toYaml .Values.service.probes | nindent 14 }}
          startupProbe: {{ toYaml .Values.service.probes | nindent 14 }}
      volumes:
        - name: {{ .Values.service.nginx.configMapName }}
          configMap:
            name: {{ .Values.service.nginx.configMapName }}
            items:
              - key: {{ .Values.service.nginx.confFileName }}
                path: {{ .Values.service.nginx.confFileName }}
      imagePullSecrets:
        {{- range $name := .Values.global.imagePullSecrets }}
        - name: {{ $name }}
        {{- end }}
