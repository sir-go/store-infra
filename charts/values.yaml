global:
  project: store
  environment: production
  image:
    repo: ---
    pullPolicy: IfNotPresent
  revisionHistoryLimit: 15
  imagePullSecrets: [regcreds]
  regcreds: ""
  vault:
    token: ""
    host: '----'
    port: '8228'
  pg_url: ""

backend:
  image: backend:latest
  replicaCount: 3
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 20%
  env:
    SPRING_FLYWAY_ENABLED: false
    REPORT_PATH: /app/logs
    LOG_PATH: /app
  envSecrets:
    SPRING_DATASOURCE_URL:
      secret: backend
      key: pg_url
    SPRING_CLOUD_VAULT_HOST:
      secret: vault
      key: host
    SPRING_CLOUD_VAULT_PORT:
      secret: vault
      key: port
    SPRING_CLOUD_VAULT_TOKEN:
      secret: vault
      key: token
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 1025Mi
      cpu: 4000m
  service:
    type: ClusterIP
    port: 8080
    probes:
      httpGet:
        path: /actuator/health
        port: 8080
      initialDelaySeconds: 25
      periodSeconds: 30
      timeoutSeconds: 2
      failureThreshold: 6

backend-report:
  image: backend-report:latest
  replicaCount: 1
  envSecrets:
    SPRING_CLOUD_VAULT_HOST:
      secret: vault
      key: host
    SPRING_CLOUD_VAULT_PORT:
      secret: vault
      key: port
    SPRING_CLOUD_VAULT_TOKEN:
      secret: vault
      key: token
  resources:
    requests:
      memory: 512Mi
      cpu: 100m
    limits:
      memory: 1025Mi
      cpu: 200m

frontend:
  fqdn: -----.tech
  image: frontend:latest
  replicaCount: 1
  nodeMathes:
    - key: app
      operator: In
      values:
        - frontend
        - front
  service:
    type: ClusterIP
    port: 8080
    portExt: 80
    probes:
      httpGet:
        path: /
        port: 8080
      periodSeconds: 30
      timeoutSeconds: 2
      failureThreshold: 2
    nginx:
      configMapName: nginx-conf
      confPath: /etc/nginx/conf.d
      confFileName: default.conf
      backendUrl: http://backend:8080
